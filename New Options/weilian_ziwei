这是什么？
jtool命令旨在满足和超越XCode的otool（1）的功能，沿着额外的Mach-O命令，如atos（1），dyldinfo（1），nm（1），segedit（1）， pagestuff（1），string（1），甚至codesign（1）和非正式的ldid。 jtool还提供了新颖的功能，如二进制搜索功能，符号注入和反汇编功能（有限但不断改进）的仿真功能。 它还提供颜色输出。 最重要的是，它可以在各种平台上运行 - OS X，iOS甚至Linux。 使用任何类型都是免费的，最新版本可以在这里找到。
虽然jtool是围绕我自己的用例构建的，但其他人也发现它很有用。 它支持的选项数量显着增加。 随着MOXiI 2的发布（即将推出），我决定终于将jtool带到（几乎）1.0版本，并且正确地记录了它的无数功能，其中一些可能不容易被识别，以示例的形式。 运行没有参数的jtool将显示所有的选项，我意识到可以是一个恐怖的：
所以让我们逐个去选择一个选项：

重要提示：Jtool已经过彻底的测试，但我仍然依靠你的错误报告来解决Mach-O menagerie中更多的异国动物。 如果你有一个有趣的二进制JTool正在努力，或者如果它（* gulp *）崩溃，请让我知道。 我不能修复我不知道的错误..你可能想要运行jtool再次使用NOOBJC = 1来禁用（实验）目标C支持仍然是buggy

jtool有很多有用的功能，我不能把它们全部放在man页面中。 真的，没有人读这个人（因为你必须将jtool.1移动到/ usr / share / man / man1）。 所以我终于提出了一个体面的HTML文档。 那也是越来越多的比例，所以即使在这里也不是一切都被覆盖，但这里是一个超链接的ToC到什么：
Otool兼容选项
dyldinfo兼容选项
高级选项：
pages（获取布局）
-a（查找地址）
-S
代码唱歌选项
--sig
--ent
- 标志
Objective-C的
Darn酷选项
